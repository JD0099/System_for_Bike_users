/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BikeRunning;

import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 * 지도와 날씨 정보를 표시함.
 * DongMain 안에 메인 함수가 포함되어 있어 삭제 시킴.
 * Final Version
 * @author Sungrae
 */

public class DongMain extends javax.swing.JFrame {
    Container contentPane; //Container클래스의 객체인 contentPane 생성. 
    GetInfo gi = new GetInfo();
    
    public DongMain(String guName) throws IOException{
        initComponents();
        
        jLabelGu.setText(guName);
        
        setComboBox(guName);
        
        setSize(730,542);
        setVisible(true);
        setResizable(false); //프레임 크기 조정 x
        setLocationRelativeTo(null); //프레임을 중앙으로 배치.
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboDong = new javax.swing.JComboBox();
        jLabelGu = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        highWeather = new javax.swing.JLabel();
        lowWeather = new javax.swing.JLabel();
        weatherIcon = new javax.swing.JLabel();
        weatherString = new javax.swing.JLabel();
        jMap = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("우리동네 한바퀴");
        setAutoRequestFocus(false);
        setName("Information"); // NOI18N

        jComboDong.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jComboDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboDongActionPerformed(evt);
            }
        });

        jLabelGu.setFont(new java.awt.Font("휴먼엑스포", 1, 48)); // NOI18N
        jLabelGu.setText("부산진구");

        jButton1.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        jButton1.setText("날씨 갱신");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        highWeather.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        highWeather.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highWeather.setText("최고기온");

        lowWeather.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        lowWeather.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lowWeather.setText("최저기온");

        weatherIcon.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        weatherIcon.setText("아이콘");

        weatherString.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        weatherString.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weatherString.setText("날씨");

        jMap.setText("입력");
        jMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMapActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "보관대 위치", "갯수", "경사로"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelGu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboDong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lowWeather))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weatherString, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weatherIcon)
                    .addComponent(highWeather))
                .addGap(657, 657, 657))
            .addGroup(layout.createSequentialGroup()
                .addGap(471, 471, 471)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelGu, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboDong, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jMap, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weatherIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weatherString, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lowWeather)
                            .addComponent(highWeather))))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void setComboBox(String guName){
 //사하구 서구 중구 동구 부산지구 북구 금정구 동래구 연제구 수영구 남구 해운대구 
        String[] jingu = {"역을 선택하세요","전포역","부암역","범내골역","가야역","동의대역","개금역","서면역","부전역","양정역"};
        String[] sasang = {"역을 선택하세요","냉정역","주례역","감전역","사상역","괘법르네시떼역","덕포역","모덕역","모라역"};
        String[] jGangseo = {"역을 선택하세요","대사역","평강역","등구역","덕두역","서부산유통지구역","대저역","체육공원역","강서구청역"};
        String[] jSeogu = {"역을 선택하세요","서대신역","동대신역","토성역"};
        String[] jJunggo  = {"역을 선택하세요","자갈치역","중앙역","남포역"};
        String[] jDonggu  = {"역을 선택하세요","부산역","초량역","부산진역","좌천역","범일역"};
        String[] jGeumjeong  = {"역을 선택하세요","부산대역","장전역","구서역","두실역","남산역","범어사역","노포역"};
        String[] jSuyeong  = {"역을 선택하세요","민락역","수영역","광안역","금련산역","망미역","남천역"};
        String[] jBukgu = {"역을 선택하세요","구포역","구남역","구명역","덕천역","숙등역","남산정역","만덕역","수정역","화명역","율리역","동원역","금곡역"};
        String[] jSaha = {"역을 선택하세요","신평역","하단역","당리역","사하역","괴정역","대티역"};
        String[] jDongnae = {"역을 선택하세요","동래역","온천장역","미남역","사직역","명장역","충렬사역","낙민역","수안역"};
        String[] jHaeundae = {"역을 선택하세요","장산역","중동역","해운대역","동백역","시립미술관역","센텀시티역"};
        String[] jNamgu = {"역을 선택하세요","경성대·부경대역","대연역","못골역","지게골역","문현역","금제금융센터역"};
        String[] jYeonje = {"역을 선택하세요","시청역","연산역","물만골역","배산역","교대역","종합운동장역","거제역"};

        if(guName.compareTo("부산진구")==0){
           for(int i=0; i<jingu.length; i++){
               jComboDong.addItem(jingu[i]);
           }
        }
        
        if(guName.compareTo("사상구")==0){
           for(int i=0; i<sasang.length; i++){
               jComboDong.addItem(sasang[i]);
           }
        }
        if(guName.compareTo("강서구")==0){
           for(int i=0; i<jGangseo .length; i++){
               jComboDong.addItem(jGangseo [i]);
           }
        }
        if(guName.compareTo("서구")==0){
           for(int i=0; i<jSeogu.length; i++){
               jComboDong.addItem(jSeogu[i]);
           }
        }
        if(guName.compareTo("중구")==0){
           for(int i=0; i<jJunggo.length; i++){
               jComboDong.addItem(jJunggo[i]);
           }
        }
        if(guName.compareTo("동구")==0){
           for(int i=0; i<jDonggu.length; i++){
               jComboDong.addItem(jDonggu[i]);
           }
        }
        if(guName.compareTo("금정구")==0){
           for(int i=0; i<jGeumjeong.length; i++){
               jComboDong.addItem(jGeumjeong[i]);
           }
        }
        if(guName.compareTo("수영구")==0){
           for(int i=0; i<jSuyeong.length; i++){
               jComboDong.addItem(jSuyeong[i]);
           }
        }
        if(guName.compareTo("북구")==0){
           for(int i=0; i<jBukgu.length; i++){
               jComboDong.addItem(jBukgu[i]);
           }
        }
        if(guName.compareTo("사하구")==0){
           for(int i=0; i<jSaha.length; i++){
               jComboDong.addItem(jSaha[i]);
           }
        }
        if(guName.compareTo("동래구")==0){
           for(int i=0; i<jDongnae.length; i++){
               jComboDong.addItem(jDongnae[i]);
           }
        }
        if(guName.compareTo("해운대구")==0){
           for(int i=0; i<jHaeundae.length; i++){
               jComboDong.addItem(jHaeundae[i]);
           }
        }
        if(guName.compareTo("남구")==0){
           for(int i=0; i<jNamgu.length; i++){
               jComboDong.addItem(jNamgu[i]);
           }
        }
        if(guName.compareTo("연제구")==0){
           for(int i=0; i<jYeonje.length; i++){
               jComboDong.addItem(jYeonje[i]);
           }
        }
            
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] weatherDataRestult = new String[3]; //날씨 결과
        
        Weather weather = new Weather();
        try {
            weather.start();
            weatherDataRestult = weather.getWeatherData();
        } catch (IOException ex) {
            Logger.getLogger(DongMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        weatherDataRestult[0]=weatherDataRestult[0].replaceAll("<", "");
        weatherDataRestult[1]=weatherDataRestult[1].replaceAll("<", "");
        
        highWeather.setText(weatherDataRestult[0]+"'c");
        lowWeather.setText(weatherDataRestult[1]+"'c");
        weatherString.setText(weatherDataRestult[2]);
        iconDraw(weatherDataRestult[3]); //날씨 아이콘 그리는 함수
        System.out.println(weatherDataRestult[3]);
        weatherIcon.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboDongActionPerformed
    
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboDongActionPerformed

    private void jMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMapActionPerformed
        // TODO add your handling code here:
      
   
        String[] isStationData = new String[2]; //역 데이터 저장
        
        try {
            isStationData = gi.getInfo(jComboDong.getItemAt(jComboDong.getSelectedIndex()).toString());
            mapDraw(isStationData); //지도 그림
            tableDraw(); //테이블 그림
    
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DongMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DongMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
     
    }//GEN-LAST:event_jMapActionPerformed

    private void tableDraw(){ //테이블 그리는 함수
        DefaultTableModel model; //테이블을 만든다
            model = (DefaultTableModel)this.jTable2.getModel(); 
          
            model.setNumRows(0); //테이블에 정보가 중복해서 저장되지 않도록 테이블 초기화
            
            for(int i=0; i<gi.setStationData.size(); i=i+3){ //"보관대 위치","갯수","경사로"가 한 줄에 표시되도록 
                model.addRow(new Object[] {gi.setStationData.get(i+0), gi.setStationData.get(i+1), gi.setStationData.get(i+2)});
            }
    }
    
    private void mapDraw(String[] lh){ //지도 그리는 함수
         GoogleMaps googlemaps = new GoogleMaps(); //googlemaps 객체를 생성.
         googlemaps.setGoogleMaps(lh[0],lh[1]); //위도, 경도를 넘겨준다
         
         googlemaps.getGoogleMaps(); //입력한 위도, 경도에 따른 지도 이미지 파일을 생성한다.
         
         contentPane = getContentPane(); //ContentPane 객체를 얻음.
         contentPane.setLayout(null); //Layout을 null 로 함.
         
        ImageIcon imageIcon; //imageIcon 객체를 생성.
        imageIcon = new ImageIcon("image.jpg"); //imageIcon 객체에 지도 이미지를 저장.
        imageIcon.getImage().flush(); //각각의 역에 맞는 이미지를 저장하기 위하여 이미지아이콘을 flush해준다
    
        JLabel jido = new JLabel(imageIcon); //JLabel 클래스를 통해 생성된 지도 이미지가 들어간 jido객체를 생성한다.
        jido.setLocation(10,100); //지도 이미지의 좌표값
        jido.setSize(450,400);  //지도 이미지의 크기
        contentPane.add(jido); //크기에 맞는 지도 이미지를 contentPane 객체에 추가하여 화면에 출력한다. 
       
        contentPane.repaint(); //contentPane 객체를 새롭게 다시 그림.
    }
     private void iconDraw(String s){ //날씨 아이콘 그리는 함수
         
        ImageIcon sunny = new ImageIcon("./img/sunny.jpg"); 
        ImageIcon cloud = new ImageIcon("./img/cloud.jpg"); 
        ImageIcon rain = new ImageIcon("./img/rain.jpg"); 
        
        if(s.compareTo("sunny")==0){
            weatherIcon.setIcon(sunny);
        }
        else if(s.compareTo("cloud")==0){
            weatherIcon.setIcon(cloud);
        }
        else if(s.compareTo("rain")==0){
            weatherIcon.setIcon(rain);
        }
        else{
            weatherIcon.setText("기타");
        }
        
         
       
     }
    
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel highWeather;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboDong;
    private javax.swing.JLabel jLabelGu;
    private javax.swing.JButton jMap;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lowWeather;
    private javax.swing.JLabel weatherIcon;
    private javax.swing.JLabel weatherString;
    // End of variables declaration//GEN-END:variables

}
